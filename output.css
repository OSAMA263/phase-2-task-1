*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-top-10 {
  top: -2.5rem;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.left-\[297px\] {
  left: 297px;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.-z-10 {
  z-index: -10;
}

.z-50 {
  z-index: 50;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.\!mt-20 {
  margin-top: 5rem !important;
}

.mr-2 {
  margin-right: 0.5rem;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-0\.5 {
  height: 0.125rem;
}

.h-full {
  height: 100%;
}

.w-10 {
  width: 2.5rem;
}

.w-\[75\%\] {
  width: 75%;
}

.w-full {
  width: 100%;
}

.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-full {
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.\!gap-40 {
  gap: 10rem !important;
}

.gap-10 {
  gap: 2.5rem;
}

.gap-12 {
  gap: 3rem;
}

.gap-16 {
  gap: 4rem;
}

.gap-28 {
  gap: 7rem;
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.space-y-60 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(15rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(15rem * var(--tw-space-y-reverse));
}

.text-balance {
  text-wrap: balance;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.bg-Dark {
  --tw-bg-opacity: 1;
  background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-\[4vw\] {
  padding-left: 4vw;
  padding-right: 4vw;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.pr-10 {
  padding-right: 2.5rem;
}

.ps-4 {
  padding-inline-start: 1rem;
}

.ps-8 {
  padding-inline-start: 2rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.text-9xl {
  font-size: 8rem;
  line-height: 1;
}

.font-semibold {
  font-weight: 600;
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

/* debug */

/* * {
  box-sizing: border-box;
  background-color: rgb(0 100 0 / 0.05) !important;
} */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-wrap: pretty;
}

html {
  scroll-behavior: smooth;
}

body {
  /* global styles */
  section {
    scroll-margin-top: 130px;
  }
  h1,
  h2,
  h6 {
    --tw-text-opacity: 1;
    color: rgb(31 31 31 / var(--tw-text-opacity, 1));
  }
  img {
    &[alt="curve"] {
      border-radius: 0px;
    }
  }
  img {
    border-radius: 0.5rem;
  }
  p {
    font-size: 20px;
  }
  p {
    line-height: 2.25rem;
  }
  p {
    --tw-text-opacity: 1;
    color: rgb(84 84 84 / var(--tw-text-opacity, 1));
  }
  input,
  button,
  svg,
  textarea,
  a {
    transition: all 0.3s;
    outline: none;
  }
  .navbar-links {
    a {
      position: relative;
    }
    a {
      font-size: 1.125rem;
      line-height: 1.75rem;
    }
    a {
      font-weight: 600;
    }
    a {
      --tw-text-opacity: 1;
      color: rgb(84 84 84 / var(--tw-text-opacity, 1));
    }
    a:hover {
      --tw-text-opacity: 1;
      color: rgb(31 31 31 / var(--tw-text-opacity, 1));
    }
    a {
      &::after {
        content: "";
        display: block;
        position: absolute;
        width: 0;
        height: 2px;
        background: black;
        transition: all 0.3s;
        right: 0;
      }
      &:hover::after {
        width: 100%;
        left: 0;
      }
      &.active {
        --tw-text-opacity: 1;
        color: rgb(31 31 31 / var(--tw-text-opacity, 1));
      }
      &.active {
        &::after {
          width: 100%;
          left: 0;
        }
      }
    }
  }
  .logo {
    width: 120px;
  }
  .section-title {
    text-wrap: pretty;
  }
  .section-title {
    font-size: 50px;
  }
  .section-title {
    font-weight: 700;
  }
  .m-block > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(5rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(5rem * var(--tw-space-y-reverse));
  }
  #popup {
    position: fixed;
  }
  #popup {
    top: 0px;
  }
  #popup {
    left: 50%;
  }
  #popup {
    z-index: 10;
  }
  #popup {
    margin-left: auto;
    margin-right: auto;
  }
  #popup {
    width: -moz-fit-content;
    width: fit-content;
  }
  #popup {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  #popup {
    --tw-translate-y: -200%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  #popup {
    border-radius: 0.5rem;
  }
  #popup {
    --tw-bg-opacity: 1;
    background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
  }
  #popup {
    padding: 1rem;
  }
  #popup {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  #popup {
    transition-duration: 500ms;
  }
  #popup>h2 {
    --tw-text-opacity: 1 !important;
    color: rgb(255 255 255 / var(--tw-text-opacity, 1)) !important;
  }
  /* ------------------------------------------ */
  /* global classes */
  .layout-container {
    margin-left: auto;
    margin-right: auto;
  }
  .layout-container {
    width: 95%;
  }
  @media (min-width: 768px) {
    .layout-container {
      width: 95%;
    }
  }
  @media (min-width: 1024px) {
    .layout-container {
      width: 90%;
    }
  }
  @media (min-width: 1280px) {
    .layout-container {
      width: 85%;
    }
  }
  .grid-two-cols {
    display: grid;
  }
  .grid-two-cols {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-two-cols {
    gap: 3rem;
  }
  .grid-hero-section {
    display: grid;
  }
  .grid-hero-section {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-hero-section {
    gap: 3rem;
  }
  .grid-hero-section>div:first-child > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(5rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(5rem * var(--tw-space-y-reverse));
  }
  .main-btn {
    position: relative;
  }
  .main-btn {
    width: -moz-fit-content;
    width: fit-content;
  }
  .main-btn {
    cursor: pointer;
  }
  .main-btn {
    overflow: hidden;
  }
  .main-btn {
    border-radius: 0.375rem;
  }
  .main-btn {
    border-width: 1px;
  }
  .main-btn {
    border-color: transparent;
  }
  .main-btn {
    --tw-bg-opacity: 1;
    background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
  }
  .main-btn {
    padding: 0.5rem;
  }
  .main-btn {
    text-align: center;
  }
  .main-btn {
    font-size: 0.75rem;
    line-height: 1rem;
  }
  .main-btn {
    font-weight: 600;
  }
  .main-btn {
    letter-spacing: 0.1em;
  }
  .main-btn {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity, 1));
  }
  .main-btn {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .main-btn {
    transition-duration: 300ms;
  }
  .main-btn:hover {
    --tw-border-opacity: 1;
    border-color: rgb(31 31 31 / var(--tw-border-opacity, 1));
  }
  .main-btn:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }
  .main-btn:hover {
    --tw-text-opacity: 1;
    color: rgb(31 31 31 / var(--tw-text-opacity, 1));
  }
  @media (min-width: 640px) {
    .main-btn {
      padding-left: 2.5rem;
      padding-right: 2.5rem;
    }
  }
  @media (min-width: 640px) {
    .main-btn {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }
  }
  @media (min-width: 640px) {
    .main-btn {
      font-size: 1rem !important;
      line-height: 1.5rem !important;
    }
  }
}

/* --------------------------------------put the classes into thier section id----------------------------- */

/* hero section */

.company-states {
  display: flex;
  width: 100%;
  align-items: center;
  gap: 5rem;
  text-align: center;
}

.company-states div > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.company-states h6 {
  --tw-text-opacity: 1 !important;
  color: rgb(84 84 84 / var(--tw-text-opacity, 1)) !important;
}

.company-states {
  h1 {
    font-size: 3rem;
    line-height: 1;
  }
  h1 {
    --tw-text-opacity: 1 !important;
    color: rgb(84 84 84 / var(--tw-text-opacity, 1)) !important;
  }
}

/* services seciton */

.service-card {
  display: flex;
  align-items: flex-start;
  gap: 3rem;
  text-wrap: pretty;
}

.service-card>div > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.service-card>img {
  width: 3rem;
}

.service-card p {
  font-size: 1rem;
  line-height: 1.5rem;
}

.service-card {
  h6 {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  h6 {
    font-weight: 600;
  }
}

/* accordion section */

.accordion-item {
  .accordion-content {
    height: 0px;
  }
  .accordion-content {
    overflow: hidden;
  }
  .accordion-content {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .accordion-content {
    transition-duration: 300ms;
  }
  .accordion-content {
    &.active {
      height: auto !important;
    }
  }
  button {
    display: flex;
  }
  button {
    width: 100%;
  }
  button {
    justify-content: space-between;
  }
  button {
    border-bottom-width: 1px;
  }
  button {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }
  button {
    font-size: 1.25rem !important;
    line-height: 1.75rem !important;
  }
  button {
    font-weight: 600;
  }
  button {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  button > * {
    --tw-text-opacity: 1 !important;
    color: rgb(31 31 31 / var(--tw-text-opacity, 1)) !important;
  }
  button {
    span {
      --tw-rotate: 0deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
    span {
      font-size: 1.875rem;
      line-height: 2.25rem;
    }
    span {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }
    span {
      transition-duration: 300ms;
    }
    &.active span {
      --tw-rotate: 45deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
  }
}

/* how it works section */

.step {
  display: flex;
  gap: 2.5rem;
}

.step>div:first-child {
  display: flex;
  row-gap: 1rem;
}

.step>div:last-child > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.step>div {
  flex-direction: column;
  align-items: center;
}

.step {
  h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  h1 {
    font-weight: 700;
  }
  p {
    font-weight: 600;
  }
  .icon {
    border-radius: 9999px;
  }
  .icon {
    --tw-bg-opacity: 1;
    background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
  }
  .icon {
    padding: 1rem;
  }
  .icon>img {
    width: 4rem;
  }
  .line {
    height: 100%;
  }
  .line {
    width: 2px;
  }
  .line {
    --tw-bg-opacity: 1;
    background-color: rgb(84 84 84 / var(--tw-bg-opacity, 1));
  }
}

/* swiper-section */

.swiper-container {
  position: relative;
  display: flex;
  justify-content: space-between;
  gap: 4rem;
  border-radius: 0.125rem;
  border-top-left-radius: 0.75rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  padding-left: 1.5rem;
  padding-top: 1.5rem;
  .review-card {
    border-radius: 0.75rem;
  }
  .review-card {
    --tw-bg-opacity: 1;
    background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
  }
  .review-card {
    padding: 4rem;
  }
  .review-card {
    p {
      color: white !important;
      font-weight: 600;
    }
    .user {
      display: flex;
    }
    .user {
      align-items: center;
    }
    .user {
      gap: 1rem;
    }
    .user>div > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
    }
    .user>img {
      border-radius: 9999px;
    }
    .user h6 {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity, 1));
    }
    .user p {
      font-size: 0.75rem !important;
      line-height: 1rem !important;
    }
    .user p {
      --tw-text-opacity: 1 !important;
      color: rgb(84 84 84 / var(--tw-text-opacity, 1)) !important;
    }
  }
}

.swiper-controls {
  position: absolute;
  left: 0px;
  bottom: 0px;
  border-top-right-radius: 0.5rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  button {
    border-radius: 0.125rem;
  }
  button {
    --tw-bg-opacity: 1;
    background-color: rgb(245 245 244 / var(--tw-bg-opacity, 1));
  }
  button {
    padding: 1rem;
  }
  button:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(231 229 228 / var(--tw-bg-opacity, 1));
  }
}

/* contact section */

.form-section {
  position: relative;
  bottom: -2.75rem;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  padding: 0.75rem;
  text-align: center;
}

/* footer */

footer {
  margin-top: 0px !important;
  --tw-bg-opacity: 1;
  background-color: rgb(31 31 31 / var(--tw-bg-opacity, 1));
  padding-top: 8rem;
  padding-bottom: 8rem;
  .social-media {
    display: flex;
  }
  .social-media {
    align-items: center;
  }
  .social-media {
    gap: 1rem;
  }
  .social-media > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0 !important;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))) !important;
    margin-bottom: calc(0px * var(--tw-space-y-reverse)) !important;
  }
  .social-media {
    .media-logo {
      display: flex;
    }
    .media-logo {
      width: 2rem;
      height: 2rem;
    }
    .media-logo {
      align-items: center;
    }
    .media-logo {
      justify-content: center;
    }
    .media-logo {
      border-radius: 0.125rem;
    }
    .media-logo {
      --tw-bg-opacity: 1;
      background-color: rgb(84 84 84 / var(--tw-bg-opacity, 1));
    }
    .media-logo:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(68 64 60 / var(--tw-bg-opacity, 1));
    }
    .media-logo img {
      border-radius: 0px;
    }
  }
  ul li p {
    font-size: 1rem !important;
    line-height: 1.5rem !important;
  }
  ul li {
    h6 {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity, 1));
    }
    a {
      --tw-text-opacity: 1;
      color: rgb(168 162 158 / var(--tw-text-opacity, 1));
    }
    a:hover {
      --tw-text-opacity: 1;
      color: rgb(84 84 84 / var(--tw-text-opacity, 1));
    }
  }
}

.\[\&_ul\]\:space-y-4 ul > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
